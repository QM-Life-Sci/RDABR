---
title: "Unit 2: Reproducibility and Data Analysis Workflow"
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
format:
  clean-revealjs:
    self-contained: false
    chalkboard: true
    standalone: true
    slide-number: true
    show-slide-number: print
code-annotations: hover
bibliography: QMLS_Bibliography.bib
csl: evolution.csl
---

```{r}
#| label: setup
#| echo: false
```


# Data {background-color="#40666e"}



# Data analysis workflow {background-color="#40666e"}

## Analysis workflow {.smaller}

1. Enter data (e.g., Excel)
1. Load raw data and perform manipulations
    * Recode variables
    * Create categorical variables where applicable
    * Combine and transform variables if necessary
1. Plot the raw data to look for mistakes, extreme values, etc.
    * Go back and fix errors
    * Explore your data
1. Statistical analysis
1. Interpretation
    * More analysis
1. Make tables and figures for publication


## Analysis workflow {.nostretch}

![](../images/Workflow.drawio.png){fig-align="center" width="80%"}


# Clean coding practices {background-color="#40666e"}

## Writing clean code

Code should be understandable by others (and your future self)

- clean
- readable
- well annotated.


## Whitespace is your friend {.smaller}

- Separate elements and processes with spaces and line breaks
- Limit line length
- Use indenting to group code

Hard to read:

```{r}
#| eval: false
#| echo: true



tvtest<-lmer(sqrt(tv)~Region*log(DD5_TOT)+(1|Population/Sample_ID)+
(1|Year),data=tvdat,REML=FALSE)
summary(tvtest)
ggplot(tvdat,aes(x=log(DD5_TOT),y=sqrt(tv),col=Region))+
geom_point(shape=1,size=3,alpha=1/3)+ geom_smooth(aes(col=Region),method='lm')+
xlab(bquote('log(Degree Days above' ~5^o~C*')'))+ylab('sqrt(Terminal Velocity (m/s))')
```


## Whitespace is your friend {.smaller}

- Separate elements and processes with spaces and line breaks
- Limit line length
- Use indenting to group code

Easier to read:

```{r}
#| echo: true
#| eval: false

tvtest <- lmer(sqrt(tv) ~ Region * log(DD5_TOT) +
                 (1|Population/Sample_ID) + 
                 (1|Year), data = tvdat, 
               REML = FALSE)

summary(tvtest)

ggplot(tvdat, aes(x = log(DD5_TOT), y = sqrt(tv), col = Region)) +
  geom_point(shape = 1, size = 3, alpha = 1/3) +
  geom_smooth(aes(col = Region), method = 'lm') + 
  xlab(bquote('log(Degree Days above' ~5^o~C*')')) +
  ylab('sqrt(Terminal Velocity (m/s))')
```


## Annotations are messages to your future self (and others) {.smaller}

- Explain the reason & functionality of the code (important when you are a beginner!)
- Any useful messages

```{r}
#| echo: true
#| eval: false

# Linear mixed model
# Random effects: Sample nested in Population and Year
tvtest <- lmer(sqrt(tv) ~ Region * log(DD5_TOT) +
                 (1|Population/Sample_ID) + 
                 (1|Year), data = tvdat, 
               REML = FALSE)

# Summary output of the model
summary(tvtest)

# Plot tv vs. dd5_tot colored by Region
# alpha = transparency, smaller is more transparent
ggplot(tvdat, aes(x = log(DD5_TOT), y = sqrt(tv), col = Region)) +
  geom_point(shape = 1, size = 3, alpha = 1/3) +
  geom_smooth(aes(col = Region), method = 'lm') + 
  xlab(bquote('log(Degree Days above' ~5^o~C*')')) +
  ylab('sqrt(Terminal Velocity (m/s))')
```



# Questions {background-color="#f8c471"}


## References

::: {#refs}
:::

